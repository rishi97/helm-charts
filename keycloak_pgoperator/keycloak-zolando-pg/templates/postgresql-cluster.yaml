apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: keycloak-postgresdb-cluster
  namespace: {{ .Release.Namespace }}
#  labels:
#    application: test-app
#    environment: demo
spec:
  dockerImage: ghcr.io/zalando/spilo-15:3.0-p1
  teamId: "keycloak"
  numberOfInstances: {{ .Values.pgcluster.replica }}
  users:  # Application/Robot users
    zalando:
    - superuser
    - createdb
    keycloak: []
#  usersWithSecretRotation:
#  - foo_user
#  usersWithInPlaceSecretRotation:
#  - flyway
#  - bar_owner_user
  enableMasterLoadBalancer: {{ .Values.pgcluster.loadBalancer.master }}
  enableReplicaLoadBalancer: {{ .Values.pgcluster.loadBalancer.replica }}
  enableConnectionPooler: true # enable/disable connection pooler deployment
  enableReplicaConnectionPooler: false # set to enable connectionPooler for replica service
  enableMasterPoolerLoadBalancer: false
  enableReplicaPoolerLoadBalancer: false
  allowedSourceRanges:  # load balancers' source ranges for both master and replica services
  - 127.0.0.1/32
  databases:
    keycloak: keycloak
  preparedDatabases:
    bar:
      defaultUsers: true
      extensions:
        pg_partman: public
        pgcrypto: public
      schemas:
        data: {}
        history:
          defaultRoles: true
          defaultUsers: false
  postgresql:
    version: {{ .Values.pgcluster.postgresVersion | quote }}
    parameters:  # Expert section
      shared_buffers: "32MB"
      max_connections: "100"
      log_statement: "all"
  
  volume:
    size: {{ .Values.pgcluster.volume.size }}
#    storageClass: my-sc
#    iops: 1000  # for EBS gp3
#    throughput: 250  # in MB/s for EBS gp3
#    selector:
#      matchExpressions:
#        - { key: flavour, operator: In, values: [ "banana", "chocolate" ] }
#      matchLabels:
#        environment: dev
#        service: postgres
  
  additionalVolumes:
    # - name: data
    #   mountPath: /home/postgres/pgdata/partitions
    #   targetContainers:
    #     - postgres
    #   volumeSource:
    #     PersistentVolumeClaim:
    #       claimName: pvc-postgresql-data-partitions
    #       readyOnly: false    

  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi
  patroni:
    failsafe_mode: false
    initdb:
      encoding: "UTF8"
      locale: "en_US.UTF-8"
      data-checksums: "true"
#    pg_hba:
#      - hostssl all all 0.0.0.0/0 md5
#      - host    all all 0.0.0.0/0 md5

# overwrite custom properties for connection pooler deployments
  connectionPooler:
    numberOfInstances: {{ .Values.pgcluster.connectionPooler.instances }}
    mode: "transaction"
    schema: "pooler"
    user: "pooler"
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        cpu: "500m"
        memory: 500Mi

  initContainers:
  - name: date
    image: busybox
    command: [ "/bin/date" ]
#  sidecars:
#   - name: "telegraf-sidecar"
#     image: "telegraf:latest"
#     ports:
#     - name: metrics
#       containerPort: 8094
#       protocol: TCP
#     resources:
#       limits:
#         cpu: 500m
#         memory: 500Mi
#       requests:
#         cpu: 100m
#         memory: 100Mi
#     env:
#       - name: "USEFUL_VAR"
#         value: "perhaps-true"
